### Starting build.
# Target: paint.ml.depends, tags: { package(graphics), package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml-lwt.graphics), package(unix), debug, extension:ml, file:paint.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package js_of_ocaml-lwt.graphics -package js_of_ocaml-lwt -package js_of_ocaml -package graphics -package unix -modules paint.ml > paint.ml.depends
# Target: paint.mli.depends, tags: { package(graphics), package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml-lwt.graphics), package(unix), debug, extension:mli, file:paint.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package js_of_ocaml-lwt.graphics -package js_of_ocaml-lwt -package js_of_ocaml -package graphics -package unix -modules paint.mli > paint.mli.depends # cached
# Target: paint.cmi, tags: { package(graphics), package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml-lwt.graphics), package(unix), byte, compile, debug, extension:mli, file:paint.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package js_of_ocaml-lwt.graphics -package js_of_ocaml-lwt -package js_of_ocaml -package graphics -package unix -o paint.cmi paint.mli # cached
# Target: deque.ml.depends, tags: { package(graphics), package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml-lwt.graphics), package(unix), debug, extension:ml, file:deque.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package js_of_ocaml-lwt.graphics -package js_of_ocaml-lwt -package js_of_ocaml -package graphics -package unix -modules deque.ml > deque.ml.depends # cached
# Target: deque.mli.depends, tags: { package(graphics), package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml-lwt.graphics), package(unix), debug, extension:mli, file:deque.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package js_of_ocaml-lwt.graphics -package js_of_ocaml-lwt -package js_of_ocaml -package graphics -package unix -modules deque.mli > deque.mli.depends # cached
# Target: deque.cmi, tags: { package(graphics), package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml-lwt.graphics), package(unix), byte, compile, debug, extension:mli, file:deque.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package js_of_ocaml-lwt.graphics -package js_of_ocaml-lwt -package js_of_ocaml -package graphics -package unix -o deque.cmi deque.mli # cached
# Target: deque.cmx, tags: { package(graphics), package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml-lwt.graphics), package(unix), compile, debug, extension:cmx, extension:ml, file:deque.cmx, file:deque.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -g -package js_of_ocaml-lwt.graphics -package js_of_ocaml-lwt -package js_of_ocaml -package graphics -package unix -o deque.cmx deque.ml # cached
# Target: eventloop.ml.depends, tags: { package(graphics), package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml-lwt.graphics), package(unix), debug, extension:ml, file:eventloop.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package js_of_ocaml-lwt.graphics -package js_of_ocaml-lwt -package js_of_ocaml -package graphics -package unix -modules eventloop.ml > eventloop.ml.depends # cached
# Target: eventloop.mli.depends, tags: { package(graphics), package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml-lwt.graphics), package(unix), debug, extension:mli, file:eventloop.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package js_of_ocaml-lwt.graphics -package js_of_ocaml-lwt -package js_of_ocaml -package graphics -package unix -modules eventloop.mli > eventloop.mli.depends # cached
# Target: widget.mli.depends, tags: { package(graphics), package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml-lwt.graphics), package(unix), debug, extension:mli, file:widget.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package js_of_ocaml-lwt.graphics -package js_of_ocaml-lwt -package js_of_ocaml -package graphics -package unix -modules widget.mli > widget.mli.depends # cached
# Target: gctx.mli.depends, tags: { package(graphics), package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml-lwt.graphics), package(unix), debug, extension:mli, file:gctx.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package js_of_ocaml-lwt.graphics -package js_of_ocaml-lwt -package js_of_ocaml -package graphics -package unix -modules gctx.mli > gctx.mli.depends # cached
# Target: gctx.cmi, tags: { package(graphics), package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml-lwt.graphics), package(unix), byte, compile, debug, extension:mli, file:gctx.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package js_of_ocaml-lwt.graphics -package js_of_ocaml-lwt -package js_of_ocaml -package graphics -package unix -o gctx.cmi gctx.mli # cached
# Target: widget.cmi, tags: { package(graphics), package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml-lwt.graphics), package(unix), byte, compile, debug, extension:mli, file:widget.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package js_of_ocaml-lwt.graphics -package js_of_ocaml-lwt -package js_of_ocaml -package graphics -package unix -o widget.cmi widget.mli # cached
# Target: eventloop.cmi, tags: { package(graphics), package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml-lwt.graphics), package(unix), byte, compile, debug, extension:mli, file:eventloop.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package js_of_ocaml-lwt.graphics -package js_of_ocaml-lwt -package js_of_ocaml -package graphics -package unix -o eventloop.cmi eventloop.mli # cached
# Target: g.ml.depends, tags: { package(graphics), package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml-lwt.graphics), package(unix), debug, extension:ml, file:g.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package js_of_ocaml-lwt.graphics -package js_of_ocaml-lwt -package js_of_ocaml -package graphics -package unix -modules g.ml > g.ml.depends # cached
# Target: g.cmo, tags: { package(graphics), package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml-lwt.graphics), package(unix), byte, compile, debug, extension:cmo, extension:ml, file:g.cmo, file:g.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package js_of_ocaml-lwt.graphics -package js_of_ocaml-lwt -package js_of_ocaml -package graphics -package unix -o g.cmo g.ml # cached
# Target: g.cmx, tags: { package(graphics), package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml-lwt.graphics), package(unix), compile, debug, extension:cmx, extension:ml, file:g.cmx, file:g.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -g -package js_of_ocaml-lwt.graphics -package js_of_ocaml-lwt -package js_of_ocaml -package graphics -package unix -o g.cmx g.ml # cached
# Target: gctx.ml.depends, tags: { package(graphics), package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml-lwt.graphics), package(unix), debug, extension:ml, file:gctx.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package js_of_ocaml-lwt.graphics -package js_of_ocaml-lwt -package js_of_ocaml -package graphics -package unix -modules gctx.ml > gctx.ml.depends # cached
# Target: gctx.cmx, tags: { package(graphics), package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml-lwt.graphics), package(unix), compile, debug, extension:cmx, extension:ml, file:gctx.cmx, file:gctx.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -g -package js_of_ocaml-lwt.graphics -package js_of_ocaml-lwt -package js_of_ocaml -package graphics -package unix -o gctx.cmx gctx.ml # cached
# Target: widget.ml.depends, tags: { package(graphics), package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml-lwt.graphics), package(unix), debug, extension:ml, file:widget.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package js_of_ocaml-lwt.graphics -package js_of_ocaml-lwt -package js_of_ocaml -package graphics -package unix -modules widget.ml > widget.ml.depends # cached
# Target: widget.cmx, tags: { package(graphics), package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml-lwt.graphics), package(unix), compile, debug, extension:cmx, extension:ml, file:widget.cmx, file:widget.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -g -package js_of_ocaml-lwt.graphics -package js_of_ocaml-lwt -package js_of_ocaml -package graphics -package unix -o widget.cmx widget.ml # cached
# Target: eventloop.cmx, tags: { package(graphics), package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml-lwt.graphics), package(unix), compile, debug, extension:cmx, extension:ml, file:eventloop.cmx, file:eventloop.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -g -package js_of_ocaml-lwt.graphics -package js_of_ocaml-lwt -package js_of_ocaml -package graphics -package unix -o eventloop.cmx eventloop.ml # cached
# Target: paint.cmx, tags: { package(graphics), package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml-lwt.graphics), package(unix), compile, debug, extension:cmx, extension:ml, file:paint.cmx, file:paint.ml, implem, native, ocaml, quiet, traverse }
ocamlfind ocamlopt -c -g -package js_of_ocaml-lwt.graphics -package js_of_ocaml-lwt -package js_of_ocaml -package graphics -package unix -o paint.cmx paint.ml
# Target: paint.native, tags: { package(graphics), package(js_of_ocaml), package(js_of_ocaml-lwt), package(js_of_ocaml-lwt.graphics), package(unix), debug, dont_link_with, extension:native, file:paint.native, link, native, ocaml, program, quiet, traverse }
ocamlfind ocamlopt -linkpkg -g -package js_of_ocaml-lwt.graphics -package js_of_ocaml-lwt -package js_of_ocaml -package graphics -package unix deque.cmx g.cmx gctx.cmx widget.cmx eventloop.cmx paint.cmx -o paint.native
# Compilation successful.
